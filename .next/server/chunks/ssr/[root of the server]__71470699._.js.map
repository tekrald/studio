{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/generate-wedding-speech.ts"],"sourcesContent":["// 'use server'\n'use server';\n/**\n * @fileOverview AI-powered tool that helps generate a wedding speech based on key details provided by the couple.\n *\n * - generateWeddingSpeech - A function that handles the wedding speech generation process.\n * - GenerateWeddingSpeechInput - The input type for the generateWeddingSpeech function.\n * - GenerateWeddingSpeechOutput - The return type for the generateWeddingSpeech function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst GenerateWeddingSpeechInputSchema = z.object({\n  coupleHistory: z\n    .string()\n    .describe('A detailed history of the couple, including how they met and key milestones in their relationship.'),\n  memorableMoments: z\n    .string()\n    .describe('Description of memorable moments the couple has shared.'),\n  personalAnecdotes: z\n    .string()\n    .describe('Personal anecdotes and stories that highlight the coupleâ€™s relationship.'),\n  messageForTheAudience: z\n    .string()\n    .describe('A message for the audience expressing gratitude and setting the tone for the celebration.'),\n});\nexport type GenerateWeddingSpeechInput = z.infer<typeof GenerateWeddingSpeechInputSchema>;\n\nconst GenerateWeddingSpeechOutputSchema = z.object({\n  speech: z.string().describe('The generated wedding speech.'),\n});\nexport type GenerateWeddingSpeechOutput = z.infer<typeof GenerateWeddingSpeechOutputSchema>;\n\nexport async function generateWeddingSpeech(input: GenerateWeddingSpeechInput): Promise<GenerateWeddingSpeechOutput> {\n  return generateWeddingSpeechFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'generateWeddingSpeechPrompt',\n  input: {schema: GenerateWeddingSpeechInputSchema},\n  output: {schema: GenerateWeddingSpeechOutputSchema},\n  prompt: `You are a professional wedding speech writer.\n\n  Based on the information provided by the couple, write a personalized and heartfelt wedding speech.\n  Ensure the speech includes elements of humor, emotion, and gratitude.\n\n  Couple History: {{{coupleHistory}}}\n  Memorable Moments: {{{memorableMoments}}}\n  Personal Anecdotes: {{{personalAnecdotes}}}\n  Message for the Audience: {{{messageForTheAudience}}}\n  `,\n});\n\nconst generateWeddingSpeechFlow = ai.defineFlow(\n  {\n    name: 'generateWeddingSpeechFlow',\n    inputSchema: GenerateWeddingSpeechInputSchema,\n    outputSchema: GenerateWeddingSpeechOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":"AAAA,eAAe;;;;;;AAEf;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,mCAAmC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAChD,eAAe,uIAAA,CAAA,IAAC,CACb,MAAM,GACN,QAAQ,CAAC;IACZ,kBAAkB,uIAAA,CAAA,IAAC,CAChB,MAAM,GACN,QAAQ,CAAC;IACZ,mBAAmB,uIAAA,CAAA,IAAC,CACjB,MAAM,GACN,QAAQ,CAAC;IACZ,uBAAuB,uIAAA,CAAA,IAAC,CACrB,MAAM,GACN,QAAQ,CAAC;AACd;AAGA,MAAM,oCAAoC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACjD,QAAQ,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC9B;AAGO,eAAe,uCAAmB,GAAnB,sBAAsB,KAAiC;IAC3E,OAAO,0BAA0B;AACnC;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAgC;IAChD,QAAQ;QAAC,QAAQ;IAAiC;IAClD,QAAQ,CAAC;;;;;;;;;EAST,CAAC;AACH;AAEA,MAAM,4BAA4B,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC7C;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IA7BoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 306, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 363, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28main%29/speech-writer/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(main)/speech-writer/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(main)/speech-writer/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAyS,GACtU,uEACA","debugId":null}},
    {"offset": {"line": 377, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28main%29/speech-writer/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(main)/speech-writer/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(main)/speech-writer/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAqR,GAClT,mDACA","debugId":null}},
    {"offset": {"line": 391, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}