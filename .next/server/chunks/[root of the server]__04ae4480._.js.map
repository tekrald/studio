{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/api/crypto-price/route.ts"],"sourcesContent":["\nimport { type NextRequest, NextResponse } from 'next/server';\nimport { format } from 'date-fns';\n\n/**\n * API route to fetch cryptocurrency price from CoinMarketCap.\n *\n * Query parameters:\n * - symbol: The cryptocurrency name (e.g., 'Bitcoin', 'Ethereum', 'Solana')\n * - date: The date of acquisition (e.g., 'YYYY-MM-DD')\n */\n\nconst SYMBOL_MAP: { [key: string]: string } = {\n  'Bitcoin': 'BTC',\n  'Ethereum': 'ETH',\n  'Solana': 'SOL',\n};\n\nexport async function GET(request: NextRequest) {\n  const searchParams = request.nextUrl.searchParams;\n  const symbolName = searchParams.get('symbol');\n  const dateString = searchParams.get('date'); // Expected YYYY-MM-DD format\n\n  if (!symbolName || !dateString) {\n    return NextResponse.json({ error: 'Símbolo da moeda e data são obrigatórios' }, { status: 400 });\n  }\n\n  const apiKey = process.env.COINMARKETCAP_API_KEY;\n  if (!apiKey) {\n    console.error('COINMARKETCAP_API_KEY não está configurada no servidor.');\n    return NextResponse.json({ error: 'Configuração da API do servidor incompleta.' }, { status: 500 });\n  }\n\n  const cmcSymbol = SYMBOL_MAP[symbolName];\n  if (!cmcSymbol) {\n    return NextResponse.json({ error: `Símbolo da moeda não mapeado: ${symbolName}` }, { status: 400 });\n  }\n\n  // Format date just to be sure, though it should come as YYYY-MM-DD\n  let formattedDate;\n  try {\n    formattedDate = format(new Date(dateString + 'T00:00:00Z'), 'yyyy-MM-dd'); // Ensure UTC interpretation\n  } catch (e) {\n    return NextResponse.json({ error: 'Formato de data inválido.' }, { status: 400 });\n  }\n\n  // CoinMarketCap API URL for historical quotes\n  // We aim for the closing price of the specified day.\n  // CMC API needs the date for time_start or time_end.\n  // Using interval=daily should give one quote for the day.\n  const apiUrl = `https://pro-api.coinmarketcap.com/v2/cryptocurrency/quotes/historical?symbol=${cmcSymbol}&time_start=${formattedDate}&time_end=${formattedDate}&count=1&interval=daily&convert=BRL`;\n  \n  try {\n    const cmcResponse = await fetch(apiUrl, {\n      headers: {\n        'X-CMC_PRO_API_KEY': apiKey,\n        'Accept': 'application/json',\n      },\n    });\n\n    if (!cmcResponse.ok) {\n      const errorData = await cmcResponse.json();\n      console.error('Erro da API CoinMarketCap:', errorData);\n      return NextResponse.json({ error: 'Falha ao buscar preço da API externa.', details: errorData.status?.error_message || 'Erro desconhecido da CMC' }, { status: cmcResponse.status });\n    }\n\n    const data = await cmcResponse.json();\n\n    // Extract the price in BRL\n    // The structure is data.data[SYMBOL].quotes[0].quote.BRL.price\n    const quotes = data?.data?.[cmcSymbol]?.[0]?.quotes; // CMC v2 returns symbol in data object directly with array of quotes\n    if (!quotes || quotes.length === 0) {\n      console.error('Resposta da API CoinMarketCap não contém cotações:', data);\n      return NextResponse.json({ error: 'Preço não encontrado para a data ou símbolo especificado na resposta da API.' }, { status: 404 });\n    }\n    \n    // Assuming the first quote in the array is for the requested day\n    const priceInBRL = quotes[0]?.quote?.BRL?.price;\n\n    if (priceInBRL === undefined || priceInBRL === null) {\n      console.error('Preço em BRL não encontrado na cotação:', quotes[0]);\n      return NextResponse.json({ error: 'Preço em BRL não encontrado para a data ou símbolo especificado.' }, { status: 404 });\n    }\n\n    return NextResponse.json({ price: parseFloat(priceInBRL.toFixed(2)), currency: 'BRL' });\n\n  } catch (error) {\n    console.error('Erro ao buscar preço da CoinMarketCap:', error);\n    // @ts-ignore\n    return NextResponse.json({ error: 'Erro interno ao buscar preço.', details: error.message }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":";;;AACA;AACA;;;AAEA;;;;;;CAMC,GAED,MAAM,aAAwC;IAC5C,WAAW;IACX,YAAY;IACZ,UAAU;AACZ;AAEO,eAAe,IAAI,OAAoB;IAC5C,MAAM,eAAe,QAAQ,OAAO,CAAC,YAAY;IACjD,MAAM,aAAa,aAAa,GAAG,CAAC;IACpC,MAAM,aAAa,aAAa,GAAG,CAAC,SAAS,6BAA6B;IAE1E,IAAI,CAAC,cAAc,CAAC,YAAY;QAC9B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAA2C,GAAG;YAAE,QAAQ;QAAI;IAChG;IAEA,MAAM,SAAS,QAAQ,GAAG,CAAC,qBAAqB;IAChD,IAAI,CAAC,QAAQ;QACX,QAAQ,KAAK,CAAC;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAA8C,GAAG;YAAE,QAAQ;QAAI;IACnG;IAEA,MAAM,YAAY,UAAU,CAAC,WAAW;IACxC,IAAI,CAAC,WAAW;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO,CAAC,8BAA8B,EAAE,YAAY;QAAC,GAAG;YAAE,QAAQ;QAAI;IACnG;IAEA,mEAAmE;IACnE,IAAI;IACJ,IAAI;QACF,gBAAgB,CAAA,GAAA,wJAAA,CAAA,SAAM,AAAD,EAAE,IAAI,KAAK,aAAa,eAAe,eAAe,4BAA4B;IACzG,EAAE,OAAO,GAAG;QACV,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAA4B,GAAG;YAAE,QAAQ;QAAI;IACjF;IAEA,8CAA8C;IAC9C,qDAAqD;IACrD,qDAAqD;IACrD,0DAA0D;IAC1D,MAAM,SAAS,CAAC,6EAA6E,EAAE,UAAU,YAAY,EAAE,cAAc,UAAU,EAAE,cAAc,mCAAmC,CAAC;IAEnM,IAAI;QACF,MAAM,cAAc,MAAM,MAAM,QAAQ;YACtC,SAAS;gBACP,qBAAqB;gBACrB,UAAU;YACZ;QACF;QAEA,IAAI,CAAC,YAAY,EAAE,EAAE;YACnB,MAAM,YAAY,MAAM,YAAY,IAAI;YACxC,QAAQ,KAAK,CAAC,8BAA8B;YAC5C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;gBAAyC,SAAS,UAAU,MAAM,EAAE,iBAAiB;YAA2B,GAAG;gBAAE,QAAQ,YAAY,MAAM;YAAC;QACpL;QAEA,MAAM,OAAO,MAAM,YAAY,IAAI;QAEnC,2BAA2B;QAC3B,+DAA+D;QAC/D,MAAM,SAAS,MAAM,MAAM,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE,QAAQ,qEAAqE;QAC1H,IAAI,CAAC,UAAU,OAAO,MAAM,KAAK,GAAG;YAClC,QAAQ,KAAK,CAAC,sDAAsD;YACpE,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAA+E,GAAG;gBAAE,QAAQ;YAAI;QACpI;QAEA,iEAAiE;QACjE,MAAM,aAAa,MAAM,CAAC,EAAE,EAAE,OAAO,KAAK;QAE1C,IAAI,eAAe,aAAa,eAAe,MAAM;YACnD,QAAQ,KAAK,CAAC,2CAA2C,MAAM,CAAC,EAAE;YAClE,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAmE,GAAG;gBAAE,QAAQ;YAAI;QACxH;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO,WAAW,WAAW,OAAO,CAAC;YAAK,UAAU;QAAM;IAEvF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0CAA0C;QACxD,aAAa;QACb,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;YAAiC,SAAS,MAAM,OAAO;QAAC,GAAG;YAAE,QAAQ;QAAI;IAC7G;AACF","debugId":null}}]
}